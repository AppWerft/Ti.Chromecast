/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.googlecast;

import java.util.ArrayList;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;

import android.content.Context;
import android.os.Message;
import android.support.v7.media.MediaRouter;
import android.support.v7.media.MediaRouter.RouteInfo;

import com.google.android.gms.cast.CastDevice;
import com.google.android.gms.cast.framework.CastContext;

@Kroll.proxy(creatableInModule = ChromecastModule.class)
public class RouteInfoProxy extends KrollProxy {
	// Standard Debugging variables
	private static final String LCAT = ChromecastModule.LCAT;

	@SuppressWarnings("unused")
	private RouteInfo info;
	private static final int MSG_FIRST_ID = KrollModule.MSG_LAST_ID + 1;
	private static final int MSG_MEDIAROUTER_START = MSG_FIRST_ID + 100;
	private static final int MSG_MEDIAROUTER_STOP = MSG_FIRST_ID + 101;
	protected static final int MSG_LAST_ID = MSG_FIRST_ID + 999;
	private CastDevice selectedDevice;
	private CastContext castContext;
	private Context ctx;
	private MediaRouter mediaRouter;
	private MediaRouter.Callback mediaRouterCallback;
	private ArrayList<String> routeNames = new ArrayList<String>();
	private final ArrayList<MediaRouter.RouteInfo> routeInfos = new ArrayList<MediaRouter.RouteInfo>();

	public RouteInfoProxy(RouteInfo info) {
		this.info = info;
	}

	public RouteInfo getInfo() {
		return info;
	}

	@Kroll.method
	public String getName() {
		return this.info.getName();
	}

	@Kroll.method
	public String getDescription() {
		return this.info.getDescription();
	}

	@Kroll.method
	public String getId() {
		return this.info.getId();
	}

	@Kroll.method
	public KrollDict getJSON() {
		KrollDict kd = new KrollDict();
		kd.put("canDisconnect", this.info.canDisconnect());
		kd.put("name", this.info.getName());
		kd.put("description", this.info.getDescription());
		kd.put("enabled", this.info.isEnabled());
		kd.put("selected", this.info.isSelected());
		return kd;
	}

	@Kroll.method
	public boolean canDisconnect() {
		return this.info.canDisconnect();
	}

	@Override
	public boolean handleMessage(Message msg) {
		switch (msg.what) {
		case MSG_MEDIAROUTER_START: {
			return true;
		}
		case MSG_MEDIAROUTER_STOP: {
			return true;
		}
		default: {
			return super.handleMessage(msg);
		}
		}
	}

	public RouteInfoProxy() {
		super();

	}

}